{"text": "text\\<open>A version of \\<open>set_list_append\\<close> using $n+1$ instead of \\<open>succ(n)\\<close>. \\<close>\n", "statement": "lemma set_list_append1: \n  assumes \"n\\<in>nat\" and \"\\<forall>k\\<in>n #+ 1. q(k) \\<in> X\"\n  defines \"a\\<equiv>{\\<langle>k,q(k)\\<rangle>. k\\<in>n #+ 1}\"\n  shows\n  \"a: n #+ 1 \\<rightarrow> X\"\n  \"{\\<langle>k,q(k)\\<rangle>. k \\<in> n}: n \\<rightarrow> X\"\n  \"Init(a) = {\\<langle>k,q(k)\\<rangle>. k \\<in> n}\"\n  \"a = Append({\\<langle>k,q(k)\\<rangle>. k \\<in> n},q(n))\"\n  \"a = Append(Init(a), q(n))\"\n  \"a = Append(Init(a), a`(n))\"\n"}