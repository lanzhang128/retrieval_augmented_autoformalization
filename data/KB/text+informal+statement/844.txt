{"text": "text\\<open>IntegerAddition adds integers and IntegerMultiplication multiplies\n  integers. This states that the ZF functions \\<open>IntegerAddition\\<close> and\n  \\<open>IntegerMultiplication\\<close> give the same results as the higher-order\n  equivalents defined in the standard \\<open>Int\\<close> theory.\\<close>\n", "informal": " Assuming `a` and `b` are integers, we have the following equations:\n\n`a > b => a + b = a` (Left-hand side of the first goal)\n\n`a < b => a * b = a` (Left-hand side of the second goal)\n\n`a > b` is not given in the assumptions, but `a < b` is equivalent to `-a > -b`. Since multiplication is commutative, we have `a < b <=> b > a`, and we can rewrite the second equation as `b < a => a * b = b`.\n\nSo, in natural language:\n\nAssuming `a` and `b` are integers, when `a` is greater than `b`, we have the following equalities:\n\n`a = a + b` (first equation)\n\n`b = a * b` (second equation).\n\nAlternatively, when `b` is smaller than `a`, we have:\n\n`b = a + (-b)` (first equation)\n\n`a = b * (-1) + b` (second equation).\n\nUsing the definition of `$+` and `$*` as `+` and `*` in Isabelle/ZF, the original statement is stating that for integers `a` and `b`, if `a` and `b` are in the set of integers, then we have `a > b => a + b = a` and `b < a => b = a * b`. In natural language, this is equivalent to saying that when one integer is larger than another one, their sum equals the larger integer, while the smaller integer equals the product of itself and the larger integer when we consider the larger integer as a multiplier.", "statement": "lemma (in int0) Int_ZF_1_L2: assumes A1: \"a \\<in> \\<int>\"  \"b \\<in> \\<int>\"\n  shows \n  \"a\\<ra>b = a $+ b\"  \n  \"a\\<cdot>b = a $* b\"\n"}