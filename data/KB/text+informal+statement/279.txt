{"text": "text\\<open>The non-determinism is introduced by allowing\nthe transition function to return not just a state,\nbut more than one or even none.\\<close>\n", "informal": " A non-deterministic finite state automaton (NFSA) for a finite alphabet is defined as a set S of states, an initial state s0 in S, a transition function t from S x Alphabet to the powerset of S, where Alphabet is the given finite alphabet. Thus, an NFSA is a tuple (S, s0, t, F) satisfying the conditions that S is finite, s0 is an element of S, F is a subset of S, and t is a function from S x Alphabet to the powerset of S.", "statement": "definition\n  NFSA (\"'(_,_,_,_'){is an NFSA for alphabet}_\") where\n  \"Finite(\\<Sigma>) \\<Longrightarrow> (S,s\\<^sub>0,t,F){is an NFSA for alphabet}\\<Sigma> \\<equiv> Finite(S) \\<and> s\\<^sub>0\\<in>S \\<and> F\\<subseteq>S \\<and> t:S\\<times>\\<Sigma>\\<rightarrow>Pow(S)\"\n"}