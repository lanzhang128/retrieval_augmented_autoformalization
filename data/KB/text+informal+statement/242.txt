{"text": "text\\<open>A version of \\<open>set_list_append\\<close> using $n+1$ instead of \\<open>succ(n)\\<close>. \\<close>\n", "informal": " Given a natural number n and a list of elements q(0) to q(n), we have:\n\n1. The list a of size n+1 equals the initial segment of X containing elements q(0) to q(n), followed by q(n).\n2. Each element <langle k, q(k) <rangle> in the list a with k in the range 0 to n is an element in X.\n3. The initial segment of list a is equal to the given list of elements q(0) to q(n).\n4. List a is the result of appending the initial segment of itself to itself at the position n. \n\nOr in less formal language:\n\nWith given natural number n and a list q of n+1 elements, we have that the list a consists of the initial segment of X of size n, followed by the last element of list q. All elements in the first n positions of list a are also elements of X. The initial segment of list a is equal to the given list q of size n+1. Furthermore, the list a is obtained by appending a copy of itself to itself at position n.", "statement": "lemma set_list_append1: \n  assumes \"n\\<in>nat\" and \"\\<forall>k\\<in>n #+ 1. q(k) \\<in> X\"\n  defines \"a\\<equiv>{\\<langle>k,q(k)\\<rangle>. k\\<in>n #+ 1}\"\n  shows\n  \"a: n #+ 1 \\<rightarrow> X\"\n  \"{\\<langle>k,q(k)\\<rangle>. k \\<in> n}: n \\<rightarrow> X\"\n  \"Init(a) = {\\<langle>k,q(k)\\<rangle>. k \\<in> n}\"\n  \"a = Append({\\<langle>k,q(k)\\<rangle>. k \\<in> n},q(n))\"\n  \"a = Append(Init(a), q(n))\"\n  \"a = Append(Init(a), a`(n))\"\n"}