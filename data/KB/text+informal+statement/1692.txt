{"text": "text\\<open>First we define a notion similar to \\<open>Fold\\<close>, except that\n  that the initial element of the fold is given by the first element\n  of sequence. By analogy with Haskell fold we call that \\<open>Fold1\\<close>\n\\<close>\n", "informal": " \"Fold1 is defined as equal to Fold, where Fold1 applies function f to an initial element a and the rest of the list Tail(a), and Fold applies function f to an initial accumulator a(0) and the remainder of the list Tail(a).\"", "statement": "definition\n  \"Fold1(f,a) \\<equiv> Fold(f,a`(0),Tail(a))\"\n"}